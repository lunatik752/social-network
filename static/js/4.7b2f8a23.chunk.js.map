{"version":3,"sources":["pages/Chat/Messages.module.css","pages/Chat/ChatPage.tsx"],"names":["module","exports","ws","WebSocket","ChatPage","Chat","Messages","AddMessageChatForm","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessage","className","style","messagesWrapper","map","m","index","Message","key","message","src","photo","alt","userName","textMessage","setTextMessage","onChange","currentTarget","value","onClick","send"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,gBAAkB,oC,8FCE9BC,EAAK,IAAIC,UAAU,gEAkBVC,UATY,WAEvB,OACI,6BACI,kBAACC,EAAD,QAQZ,IAAMA,EAAiB,WAGnB,OACI,6BACI,kBAACC,EAAD,MACA,kBAACC,EAAD,QAKND,EAAqB,WAAO,IAAD,EAEGE,mBAA4B,IAF/B,mBAEtBC,EAFsB,KAEZC,EAFY,KAW7B,OAPAC,qBAAU,WACNT,EAAGU,iBAAiB,WAAW,SAACC,GAC5B,IAAMC,EAAcC,KAAKC,MAAMH,EAAEI,MACjCP,GAAY,SAACQ,GAAD,4BAAqBA,GAArB,YAAqCJ,YAEtD,IAGC,yBAAKK,UAAWC,IAAMC,iBACjBZ,EAASa,KAAI,SAACC,EAAGC,GAAJ,OAAc,kBAACC,EAAD,CAASC,IAAKF,EAAOG,QAASJ,SAMhEE,EAAkD,SAAC,GAAe,IAAdE,EAAa,EAAbA,QAEtD,OACI,6BACI,yBAAKC,IAAKD,EAAQE,MAAOC,IAAI,UADjC,IAC2C,2BAAIH,EAAQI,UACnD,6BACCJ,EAAQA,QACT,+BAMNpB,EAA+B,WAAO,IAAD,EAEFC,mBAAS,IAFP,mBAEjCwB,EAFiC,KAEpBC,EAFoB,KAYvC,OACI,6BACI,6BACI,8BACIC,SAAU,SAACrB,GAAD,OAAOoB,EAAepB,EAAEsB,cAAcC,QAChDA,MAAOJ,KAEf,6BACI,4BAAQK,QAhBA,WACXL,IAGL9B,EAAGoC,KAAKN,GACRC,EAAe,OAWP","file":"static/js/4.7b2f8a23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrapper\":\"Messages_messagesWrapper__2UjrI\"};","import React, {useEffect, useState} from \"react\";\r\nimport style from './Messages.module.css'\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage\r\n\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Messages/>\r\n            <AddMessageChatForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        ws.addEventListener('message', (e) => {\r\n            const newMessages = JSON.parse(e.data);\r\n            setMessages((prevMessage) => [...prevMessage, ...newMessages])\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={style.messagesWrapper}>\r\n            {messages.map((m, index) => <Message key={index} message={m}/>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={message.photo} alt='photo'/> <b>{message.userName}</b>\r\n            <br/>\r\n            {message.message}\r\n            <hr/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageChatForm: React.FC = () => {\r\n\r\n    const[textMessage, setTextMessage] = useState('')\r\n\r\n    const sendMessage = () => {\r\n        if (!textMessage) {\r\n            return\r\n        }\r\n        ws.send(textMessage)\r\n        setTextMessage('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea\r\n                    onChange={(e) => setTextMessage(e.currentTarget.value)}\r\n                    value={textMessage}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={sendMessage}>send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}