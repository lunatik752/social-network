{"version":3,"sources":["pages/Chat/Messages.module.css","pages/Chat/ChatPage.tsx"],"names":["module","exports","ChatPage","Chat","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","Messages","AddMessageChatForm","messages","useSelector","state","chat","className","style","messagesWrapper","map","m","index","Message","key","message","src","photo","alt","userName","useState","textMessage","setTextMessage","onChange","e","currentTarget","value","onClick","sendMessage","disabled"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,gBAAkB,oC,uGCcrBC,UAPY,WACvB,OACI,6BACI,kBAACC,EAAD,QAOZ,IAAMA,EAAiB,WAEnB,IAAMC,EAAWC,cAUjB,OARAC,qBAAU,WAEN,OADAF,EAAUG,eACH,WACHH,EAASI,kBAEd,IAIC,6BACI,kBAACC,EAAD,MACA,kBAACC,EAAD,QAKND,EAAqB,WAEvB,IAAME,EAAWC,aAAY,SAACC,GAAD,OAA6BA,EAAMC,KAAKH,YAErE,OACI,yBAAKI,UAAWC,IAAMC,iBACjBN,EAASO,KAAI,SAACC,EAAGC,GAAJ,OAAc,kBAACC,EAAD,CAASC,IAAKF,EAAOG,QAASJ,SAMhEE,EAAkD,SAAC,GAAe,IAAdE,EAAa,EAAbA,QAEtD,OACI,6BACI,yBAAKC,IAAKD,EAAQE,MAAOC,IAAI,UADjC,IAC2C,2BAAIH,EAAQI,UACnD,6BACCJ,EAAQA,QACT,+BAMNb,EAA+B,WAAO,IAAD,EAEDkB,mBAAS,IAFR,mBAEhCC,EAFgC,KAEnBC,EAFmB,OAGDF,mBAA8B,WAH7B,mBAIjCxB,GAJiC,UAItBC,eAUjB,OACI,6BACI,6BACI,8BACI0B,SAAU,SAACC,GAAD,OAAOF,EAAeE,EAAEC,cAAcC,QAChDA,MAAOL,KAEf,6BACI,4BAAQM,QAhBO,WAClBN,IAGLzB,EAASgC,YAAYP,IACrBC,EAAe,MAW8BO,UAAU,GAA/C","file":"static/js/4.6088e3db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrapper\":\"Messages_messagesWrapper__2UjrI\"};","import React, {useEffect, useState} from \"react\";\r\nimport style from './Messages.module.css'\r\nimport {ChatMessageType} from \"../../api/chat-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessage, startMessagesListening, stopMessagesListening} from \"../../redux/chatReduсer\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\n\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatPage\r\n\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch((startMessagesListening()))\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Messages/>\r\n            <AddMessageChatForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n\r\n    const messages = useSelector((state: AppRootStateType) => state.chat.messages)\r\n\r\n    return (\r\n        <div className={style.messagesWrapper}>\r\n            {messages.map((m, index) => <Message key={index} message={m}/>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={message.photo} alt='photo'/> <b>{message.userName}</b>\r\n            <br/>\r\n            {message.message}\r\n            <hr/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageChatForm: React.FC = () => {\r\n\r\n    const [textMessage, setTextMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n    const dispatch = useDispatch();\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!textMessage) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(textMessage))\r\n        setTextMessage('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea\r\n                    onChange={(e) => setTextMessage(e.currentTarget.value)}\r\n                    value={textMessage}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={sendMessageHandler} disabled={false}>send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}