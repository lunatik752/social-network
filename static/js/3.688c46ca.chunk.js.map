{"version":3,"sources":["components/Photos/Photos.module.css","components/Photos/PhotoItem/PhotoItem.module.css","components/Photos/PhotoItem/PhotoItem.tsx","components/Photos/Photos.tsx","components/Photos/PhotosContainer.tsx","hoc/withAuthRedirect.tsx"],"names":["module","exports","PhotoItem","props","className","style","photoWrapper","src","urlPhoto","alt","title","Photos","photosElement","photos","map","photo","key","id","photosWrapper","WrappedComponent","AuthRedirectComponent","connect","state","isAuth","auth","restProps","to","photosPage","addComment","updateNewCommentText"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,cAAgB,gC,oBCAlCD,EAAOC,QAAU,CAAC,cAAgB,mC,wGCmBnBC,EAXwB,SAACC,GACpC,OACI,yBAAKC,UAAWC,IAAMC,cACnB,yBAAKC,IAAKJ,EAAMK,SAAUC,IAAI,UAC9B,2BAAIN,EAAMO,SCYNC,EAhBqB,SAACR,GAGjC,IAAIS,EAAgBT,EAAMU,OAAOC,KAAI,SAAAC,GAAK,OAAI,kBAAC,EAAD,CAAWC,IAAKD,EAAME,GACXT,SAAUO,EAAMP,SAChBE,MAAOK,EAAML,WAGtE,OACI,yBAAKN,UAAWC,IAAMa,eACjBN,I,0BCLb,ICJuCO,EDInCC,GCJmCD,EDIMR,ECWlCU,aAPe,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAKpBF,EAbwE,SAAClB,GAC/CA,EAAxBoB,OADkF,IACvEE,EADsE,YACzDtB,EADyD,YAElF,OAAKA,EAAMoB,OACJ,kBAACJ,EAAqBM,GADH,kBAAC,IAAD,CAAUC,GAAI,eDSrCL,uBANS,SAACC,GACrB,MAAO,CACHT,OAAQS,EAAMK,WAAWd,UAIsE,CAACe,eAAYC,0BAArGR,CAA4HD","file":"static/js/3.688c46ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photosWrapper\":\"Photos_photosWrapper__2bNgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photosWrapper\":\"PhotoItem_photosWrapper__BEah5\"};","import React from 'react';\r\nimport style from './PhotoItem.module.css'\r\n\r\ntype PropsType = {\r\n    urlPhoto: string\r\n    title: string\r\n}\r\n\r\n\r\nconst PhotoItem: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={style.photoWrapper}>\r\n           <img src={props.urlPhoto} alt='photo'/>\r\n           <p>{props.title}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default PhotoItem;\r\n","import React from 'react';\r\nimport style from './Photos.module.css'\r\nimport PhotoItem from \"./PhotoItem/PhotoItem\";\r\nimport {PhotosType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    photos: Array<PhotosType>\r\n}\r\n\r\nconst Photos: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    let photosElement = props.photos.map(photo => <PhotoItem key={photo.id}\r\n                                                             urlPhoto={photo.urlPhoto}\r\n                                                             title={photo.title}/>)\r\n\r\n\r\n    return (\r\n        <div className={style.photosWrapper}>\r\n            {photosElement}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Photos;\r\n","import {connect} from \"react-redux\";\r\nimport Photos from \"./Photos\";\r\nimport {addComment, updateNewCommentText} from \"../../redux/photosRedu—Åer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {PhotosType} from \"../../types/types\";\r\n\r\ntype MapStatePropsType = {\r\n    photos: Array<PhotosType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Photos)\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        photos: state.photosPage.photos,\r\n    }\r\n};\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppRootStateType>(mapStateToProps, {addComment, updateNewCommentText})(AuthRedirectComponent);\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype DispatchToPropsType = {}\r\n\r\nexport function withAuthRedirect<WCP> (WrappedComponent: React.ComponentType<WCP>)  {\r\n\r\n    const RedirectComponent: React.FC<MapStateToPropsType & DispatchToPropsType> = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n            if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <WrappedComponent {...restProps  as WCP}/>\r\n    }\r\n\r\n    let mapStateToProps = (state: AppRootStateType) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n\r\n    return connect<MapStateToPropsType, {}, WCP, AppRootStateType>(mapStateToProps)(RedirectComponent);\r\n}\r\n"],"sourceRoot":""}