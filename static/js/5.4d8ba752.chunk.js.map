{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","Message","className","s","message","DialogsItem","dialog","active","id","name","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItem","messagesItem","values","addMessage","newMessageBody","compose"],"mappings":"8NAKaA,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMC,OAET,kBAACJ,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUE,GAAI,eAJV,GAEXC,IAAMN,WAetC,OAAOO,aAPe,SAACC,GACnB,MAAO,CACHJ,OAAQI,EAAMC,KAAKL,UAKpBG,CAAyBN,K,oBCrBpCS,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,aAAe,8BAA8B,WAAa,4BAA4B,OAAS,0B,8ECcjNC,EATC,SAACT,GACb,OACI,yBAAKU,UAAWC,IAAEC,SACbZ,EAAMY,U,QCOJC,EATK,SAACb,GACjB,OACI,yBAAKU,UAAWC,IAAEG,OAAS,IAAMH,IAAEI,QAC/B,kBAAC,IAAD,CAASb,GAAI,YAAcF,EAAMgB,IAAKhB,EAAMiB,Q,iCC0BlDC,EAAcC,YAAiB,IAkB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACrB,GACpB,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXV,KAAK,iBACLW,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAEhC,6BACI,qDAQDa,EA/CC,SAAC/B,GAEb,IAAIK,EAAQL,EAAMgC,YAEdC,EAAkB5B,EAAM6B,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAanB,KAAMmB,EAAEnB,KAAMoB,IAAKD,EAAEpB,GAAIA,GAAIoB,EAAEpB,QACrFsB,EAAmBjC,EAAMkC,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,QAASyB,IAAKG,EAAExB,QAQnF,OACI,yBAAKN,UAAWC,IAAEuB,SACd,yBAAKxB,UAAWC,IAAE8B,aACbR,GAEL,yBAAKvB,UAAWC,IAAE+B,cACbJ,GAEL,kBAAClB,EAAD,CAAqBG,SAbT,SAACoB,GACjB3C,EAAM4C,WAAWD,EAAOE,qB,iCCJjBC,sBACX1C,aARkB,SAACC,GACnB,MAAO,CACH2B,YAAa3B,EAAM2B,eAME,CAACY,iBAC1BhD,IAFWkD,CAGbf","file":"static/js/5.4d8ba752.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3w6c9\",\"dialogsItem\":\"Dialogs_dialogsItem__21G-K\",\"active\":\"Dialogs_active__OkM-I\",\"messagesItem\":\"Dialogs_messagesItem__3ZPn_\",\"newMessage\":\"Dialogs_newMessage__2PajG\",\"dialog\":\"Dialogs_dialog__2fbZU\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Message;\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogsItem;\r\n\r\nDialogsItem.propTypes = {\r\n    name: PropTypes.string,\r\n    id: PropTypes.number\r\n};","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogsItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messagesItem}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newMessageBody'\r\n                       placeholder='Enter your message'\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessage} from \"../../redux/dialogsReduсer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n;\r\n\r\n"],"sourceRoot":""}